sudo apt install git python3-pip python3-dev libffi-dev libssl-dev
---------------------------------------------------------------------------------------

sudo apt-key adv --keyserver hkp://pgp.mit.edu --recv-keys 11764EE8AC24832F
----------------------------------------------------------------------------------------
sudo apt-get update --allow-releaseinfo-change

or do this

sudo nano /etc/apt/sources.list
deb-src http://raspbian.raspberrypi.org/raspbian/ stretch main contrib non-free rpi
deb http://raspbian.raspberrypi.org/raspbian/ bullseye main contrib non-free rpi

sudo nano /etc/apt/sources.list.d/raspi.list
deb-src http://archive.raspberrypi.org/debian/ buster main
deb https://archive.raspberrypi.org/debian/ buster main
deb https://archive.raspberrypi.org/debian/ bullseye main


---------------------------------------------------------------------------------------

uname -r
#nomorseri
apt install build-essential linux-headers-#nomorseri dkms git
cd /opt/
git clone https://github.com/aircrack-ng/rtl8188eus.git
echo 'blacklist r8188eu'|sudo tee -a '/etc/modprobe.d/realtek.conf'
cd /opt/rtl8188eus
sudo make && sudo make install
----------------------------------------------------------------------------------------
git clone https://github.com/waveshare/LCD-show.git
cd LCD-show/
chmod +x LCD35-show
./LCD35-show
----------------------------------------------------------------------------------------
    sudo ip route del default
    sudo route add default gw 172.24.1.1 eth0 (Use your gateway address!)
    sudo apt install raspberrypi-ui-mods
    sudo apt install chromium-browser
    reboot – the default route should restore on bootup
---------------------------------------------------------------------------------------
echo "LC_ALL=en_US.UTF-8" | sudo tee -a /etc/environment
echo "en_US.UTF-8 UTF-8" | sudo tee -a /etc/locale.gen
echo "LANG=en_US.UTF-8" | sudo tee -a /etc/locale.conf
sudo locale-gen en_US.UTF-8
-----------------------------------------------------------------------------------------
pwnagoshi.sh script:

#!/bin/bash
START=true

while $START
do
  readarray -t PIDS < <(exec pgrep -x fbi)
  if [[ ${#PIDS[@]} -eq 0 ]]; then
    echo "No fbi process was found."
    sudo fbi -T 1 -a -noverbose -t 5 -cachemem 0 /tmp/pwnagotchi_1.png /tmp/pwnagotchi_2.png /tmp/pwnagotchi_3.png
  elif ps -fp "${PIDS[@]}" | fgrep -F '<defunct>' >/dev/null; then
    echo "Defunct fbi process found: ${PIDS[*]}"
    sudo kill -s SIGTERM "${PIDS[@]}"
    sudo kill -s SIGKILL "${PIDS[@]}"
  fi
  sleep 15
done
-------------------------------------------------------------------------------------------
 rc.local

#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

ln -s /var/tmp/pwnagotchi/pwnagotchi.png /tmp/pwnagotchi_1.png
ln -s /var/tmp/pwnagotchi/pwnagotchi.png /tmp/pwnagotchi_2.png
ln -s /var/tmp/pwnagotchi/pwnagotchi.png /tmp/pwnagotchi_3.png

exit 0
-----------------------------------------------------------------------------------------------

sudo systemctl enable pwnagotchi
sudo systemctl start pwnagotchi

-----------------------------------------------------------------------------------------------

sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old
sudo mkdir /var/lib/dpkg/info
sudo apt-get update && sudo apt-get -f install
sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old
sudo rm -rf /var/lib/dpkg/info　
sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info
--------------------------------------------------------------------------------------------

sudo rm /usr/lib/python3.11/EXTERNALLY-MANAGED

----------------------------------------------------------------------------------------------

sudo apt install bettercap hostapd-wpe hostapd isc-dhcp-server beef-xss

-----------------------------------------------------------------------------------------------

UPGRADE PYTHON

sudo apt update
sudo apt upgrade
sudo apt install -y build-essential libssl-dev zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev tk-dev
wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz
tar -xvf Python-3.8.0.tgz
cd Python-3.8.0
./configure --enable-optimizations
make -j 4  # Adjust the number based on your CPU cores
sudo make altinstall
python3.8 --version
sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.8 2
sudo update-alternatives --config python3
python3.8 -m ensurepip
python3.8 -m pip install --upgrade pip
python3 --version
pip3 --version


pip install stable-baselines3[extra]
pip install stable-baselines3
